"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _styleIt = _interopRequireDefault(require("style-it"));

var _resizeObserverPolyfill = _interopRequireDefault(require("resize-observer-polyfill"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var ReactShadowScrollComponent = function ReactShadowScrollComponent(_ref) {
  var children = _ref.children,
      style = _ref.style,
      styleSubcontainer = _ref.styleSubcontainer,
      scrollPadding = _ref.scrollPadding,
      scrollColor = _ref.scrollColor,
      scrollWidth = _ref.scrollWidth,
      isShadow = _ref.isShadow,
      shadow = _ref.shadow,
      scrollColorHover = _ref.scrollColorHover,
      props = (0, _objectWithoutProperties2["default"])(_ref, ["children", "style", "styleSubcontainer", "scrollPadding", "scrollColor", "scrollWidth", "isShadow", "shadow", "scrollColorHover"]);
  var ref = (0, _react.useRef)();

  var _useState = (0, _react.useState)(false),
      _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
      scroll = _useState2[0],
      setScroll = _useState2[1];

  (0, _react.useLayoutEffect)(function () {
    var RO = new _resizeObserverPolyfill["default"](function () {
      if (ref.current.clientHeight < ref.current.scrollHeight) {
        setScroll(true);
      } else {
        setScroll(false);
      }
    });
    RO.observe(ref.current);
    return function () {
      RO.disconnect();
    };
  }, [ref]);
  var styleCustom = "\n    .container {\n      width: 100%;\n      overflow-y: hidden;\n      box-sizing: border-box;\n      display: flex;\n      box-shadow: ".concat(isShadow && scroll ? shadow : 'none', "\n    }\n    .subcontainer {\n      padding-right: ").concat(scrollPadding, "px;\n      overflow-y: auto;\n      flex: 1;\n      scrollbar-color: ").concat(scrollColor + ' transparent', ";\n      scrollbar-width: thin;\n    }\n    .subcontainer::-webkit-scrollbar {\n      width: ").concat(scrollWidth, "px;\n      background: transparent;\n    },\n    .subcontainer::-webkit-scrollbar-track { background: transparent }\n    .subcontainer::-webkit-scrollbar-thumb {\n      background: ").concat(scrollColor, ";\n      border-radius: 5px;\n      overflow: hidden;\n    }\n    .subcontainer::-webkit-scrollbar-thumb:hover { background: ").concat(scrollColorHover, " }\n  ");
  return /*#__PURE__*/_react["default"].createElement(_styleIt["default"], null, styleCustom, /*#__PURE__*/_react["default"].createElement("div", (0, _extends2["default"])({
    "aria-label": "container-scroll",
    style: style,
    className: "container"
  }, props), /*#__PURE__*/_react["default"].createElement("div", {
    "aria-label": "subcontainer-scroll",
    ref: ref,
    className: "subcontainer",
    style: styleSubcontainer
  }, children)));
};

ReactShadowScrollComponent.propTypes = {
  /** Scroll color */
  scrollColor: _propTypes["default"].string,

  /** Scroll color when hover */
  scrollColorHover: _propTypes["default"].string,

  /** Scroll width */
  scrollWidth: _propTypes["default"].number,

  /** Option to show the shadow */
  isShadow: _propTypes["default"].bool,

  /** Shadow Style */
  shadow: _propTypes["default"].string,

  /** Subcontainer Style */
  styleSubcontainer: _propTypes["default"].object
};
ReactShadowScrollComponent.defaultProps = {
  scrollColor: '#c5c5c5',
  scrollColorHover: '#a6a6a6',
  scrollWidth: 8,
  scrollPadding: 0,
  isShadow: true,
  shadow: '0 2px 4px rgba(0, 0, 0, 0.2) inset, 0 -2px 4px rgba(0, 0, 0, 0.2) inset'
};

var _default = /*#__PURE__*/(0, _react.memo)(ReactShadowScrollComponent);

exports["default"] = _default;