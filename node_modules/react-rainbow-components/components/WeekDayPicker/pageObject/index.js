"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var weekDays = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'];
/**
 * PageWeekDayPicker page object class.
 * @class
 */

var PageWeekDayPicker = /*#__PURE__*/function () {
  /**
   * Create a new PageWeekDayPicker page object.
   * @constructor
   * @param {string} rootElement - The selector of the PageWeekDayPicker root element.
   */
  function PageWeekDayPicker(rootElement) {
    (0, _classCallCheck2["default"])(this, PageWeekDayPicker);
    this.rootElement = rootElement;
  }
  /**
   * Triggers a click over the checkbox/radio input by clicking his label reference.
   * @method
   * @param {string} weekDay - The value of the day we want the make click.
   */


  (0, _createClass2["default"])(PageWeekDayPicker, [{
    key: "clickOn",
    value: function clickOn(weekDay) {
      var inputRef = this.getInputRef(weekDay);
      inputRef.click();
    }
    /**
     * Returns an array with the selected days
     * @method
     */

  }, {
    key: "getSelectedDays",
    value: function getSelectedDays() {
      var _this = this;

      var selected = weekDays.filter(function (weekDay, index) {
        var elem = $(_this.rootElement).$$('input');
        var input = elem[index];
        return input.getAttribute('checked') === 'true';
      });
      return selected;
    }
    /**
     * Returns the day that has the current focus or empty
     * @method
     */

  }, {
    key: "getFocusedDay",
    value: function getFocusedDay() {
      var _this2 = this;

      var focusedDay = weekDays.filter(function (weekDay) {
        return _this2.getInput(weekDay).isFocused();
      });
      return focusedDay.length ? focusedDay[0] : undefined;
    }
  }, {
    key: "getInput",
    value: function getInput(weekDay) {
      var index = weekDays.findIndex(function (value) {
        return value === weekDay;
      });
      var elem = $(this.rootElement).$$('input');
      return elem[index];
    }
  }, {
    key: "getInputRef",
    value: function getInputRef(weekDay) {
      var index = weekDays.findIndex(function (value) {
        return value === weekDay;
      });
      var elem = $(this.rootElement).$$('span');
      return elem[index].$('label');
    }
  }]);
  return PageWeekDayPicker;
}();

module.exports = PageWeekDayPicker;