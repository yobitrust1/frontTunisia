"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = PicklistOption;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _Option = _interopRequireDefault(require("../Option"));

/**
 * Represents a list options in a menu.
 * @category Form
 */
function PicklistOption(props) {
  // eslint-disable-next-line react/jsx-props-no-spreading
  return /*#__PURE__*/_react["default"].createElement(_Option["default"], props);
}

PicklistOption.propTypes = {
  /** Text of the PicklistOption. */
  label: _propTypes["default"].string,

  /** The name of the PicklistOption. */
  name: _propTypes["default"].string,

  /** The variant changes the type of PicklistOption.
   * Accepted variants include default and header.
   * This value defaults to default. */
  variant: _propTypes["default"].oneOf(['default', 'header']),

  /** The icon to show if it is passed. It must be a svg icon or a font icon. */
  icon: _propTypes["default"].node,

  /** Describes the position of the icon with respect to body. Options include left and right.
   * This value defaults to left. */
  iconPosition: _propTypes["default"].oneOf(['left', 'right']),

  /** If true the PicklistOption is not actionable and is shown as disabled. */
  disabled: _propTypes["default"].bool,

  /** Displays tooltip text when the mouse moves over the element. */
  title: _propTypes["default"].string,

  /** The value of the PicklistOption. */
  value: _propTypes["default"].any,

  /** A CSS class for the outer element, in addition to the component's base classes. */
  className: _propTypes["default"].string,

  /** An object with custom style applied to the outer element. */
  style: _propTypes["default"].object
};
PicklistOption.defaultProps = {
  label: undefined,
  name: undefined,
  variant: 'default',
  icon: null,
  iconPosition: 'left',
  disabled: false,
  title: undefined,
  className: undefined,
  style: undefined,
  value: undefined
};