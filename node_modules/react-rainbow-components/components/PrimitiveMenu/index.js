"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _hooks = require("../../libs/hooks");

var _constants = require("../../libs/constants");

var _InternalOverlay = _interopRequireDefault(require("../InternalOverlay"));

var _menuContent = _interopRequireDefault(require("./menuContent"));

var _styled = require("./styled");

var _utils = require("./utils");

var PrimitiveMenu = /*#__PURE__*/_react["default"].forwardRef(function (props, ref) {
  var id = props.id,
      className = props.className,
      style = props.style,
      children = props.children,
      isLoading = props.isLoading,
      menuAlignment = props.menuAlignment,
      menuSize = props.menuSize,
      title = props.title,
      assistiveText = props.assistiveText,
      Trigger = props.trigger,
      rest = (0, _objectWithoutProperties2["default"])(props, ["id", "className", "style", "children", "isLoading", "menuAlignment", "menuSize", "title", "assistiveText", "trigger"]);
  var ariaLabel = title || assistiveText;
  var triggerRef = (0, _react.useRef)();
  var dropdownRef = (0, _react.useRef)();

  var _useDisclosure = (0, _hooks.useDisclosure)(false),
      isOpen = _useDisclosure.isOpen,
      closeMenu = _useDisclosure.close,
      toggleMenu = _useDisclosure.toggle;

  (0, _hooks.useOutsideClick)(dropdownRef, function (event) {
    if (triggerRef.current.htmlElementRef.current.contains(event.target)) {
      return null;
    }

    return closeMenu();
  }, isOpen);
  (0, _hooks.useWindowResize)(function () {
    return closeMenu();
  }, isOpen);
  (0, _react.useImperativeHandle)(ref, function () {
    return {
      focus: function focus() {
        triggerRef.current.focus();
      },
      click: function click() {
        triggerRef.current.click();
      },
      blur: function blur() {
        triggerRef.current.blur();
      }
    };
  });
  var positionResolver = (0, _react.useCallback)(function (opts) {
    return (0, _utils.resolvePosition)(opts, menuAlignment);
  }, [menuAlignment]);
  var handleKeyDown = (0, _react.useCallback)(function (event) {
    if (isOpen) {
      var keyCode = event.keyCode;
      if (keyCode !== _constants.TAB_KEY) event.preventDefault();

      if (keyCode === _constants.TAB_KEY || keyCode === _constants.ESCAPE_KEY) {
        closeMenu();
        triggerRef.current.focus();
      }
    }
  }, [closeMenu, isOpen]);
  return /*#__PURE__*/_react["default"].createElement(_styled.StyledContainer, {
    id: id,
    role: "presentation",
    className: className,
    style: style,
    onKeyDown: handleKeyDown
  }, /*#__PURE__*/_react["default"].createElement(Trigger // eslint-disable-next-line react/jsx-props-no-spreading
  , (0, _extends2["default"])({}, rest, {
    isOpen: isOpen,
    title: title,
    ariaExpanded: isOpen,
    ariaHaspopup: true,
    assistiveText: assistiveText,
    onClick: toggleMenu,
    ref: triggerRef
  })), /*#__PURE__*/_react["default"].createElement(_InternalOverlay["default"], {
    isVisible: isOpen,
    positionResolver: positionResolver,
    triggerElementRef: function triggerElementRef() {
      return triggerRef.current.htmlElementRef;
    }
  }, /*#__PURE__*/_react["default"].createElement(_styled.StyledDropdown, {
    "data-id": "primitive-menu_dropdown",
    ref: dropdownRef,
    menuSize: menuSize,
    menuAlignment: menuAlignment,
    isLoading: isLoading
  }, /*#__PURE__*/_react["default"].createElement(_menuContent["default"], {
    ariaLabel: ariaLabel,
    onRequestClose: closeMenu,
    isLoading: isLoading
  }, children))));
});

PrimitiveMenu.propTypes = {
  /** The content of the PrimitiveMenu. Used to render the menuItem elements
   * when the PrimitiveMenu is open. */
  children: _propTypes["default"].oneOfType([_propTypes["default"].arrayOf(_propTypes["default"].node), _propTypes["default"].object]),

  /** The size of the menu. Options include xx-small, x-small, medium, or large.
   * This value defaults to xx-small. */
  menuSize: _propTypes["default"].oneOf(['xx-small', 'x-small', 'small', 'medium', 'large']),

  /** Determines the alignment of the menu relative to the element.
   * Available options are: left, center, right, bottom, bottom-left, bottom-right.
   * This value defaults to left. */
  menuAlignment: _propTypes["default"].oneOf(['left', 'right', 'bottom', 'center', 'bottom-right', 'bottom-left']),

  /** If is set to true, then is showed a loading symbol. */
  isLoading: _propTypes["default"].bool,

  /** Displays tooltip text when the mouse moves over the element. */
  title: _propTypes["default"].string,

  /** A description for assistive sreen readers. */
  assistiveText: _propTypes["default"].string,

  /** A CSS class for the outer element, in addition to the component's base classes. */
  className: _propTypes["default"].string,

  /** An object with custom style applied to the outer element. */
  style: _propTypes["default"].object,

  /** The id of the outer element. */
  id: _propTypes["default"].string,

  /** The element. */
  trigger: _propTypes["default"].oneOfType([_propTypes["default"].func, _propTypes["default"].object]).isRequired
};
PrimitiveMenu.defaultProps = {
  children: null,
  menuSize: 'xx-small',
  menuAlignment: 'left',
  isLoading: false,
  title: undefined,
  assistiveText: undefined,
  className: undefined,
  style: undefined,
  id: undefined
};
var _default = PrimitiveMenu;
exports["default"] = _default;