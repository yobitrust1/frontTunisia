"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = StepTwo;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _RenderIf = _interopRequireDefault(require("../../RenderIf"));

var _uploadFileButton = _interopRequireDefault(require("./uploadFileButton"));

var _preview = _interopRequireDefault(require("./preview"));

var _container = _interopRequireDefault(require("./styled/container"));

var _dropImg = _interopRequireDefault(require("./styled/dropImg"));

var _dropTitle = _interopRequireDefault(require("./styled/dropTitle"));

var _dropText = _interopRequireDefault(require("./styled/dropText"));

var _text = _interopRequireDefault(require("./styled/text"));

function preventDefault(event) {
  event.stopPropagation();
  event.preventDefault();
}

function StepTwo(props) {
  var onProcessFile = props.onProcessFile,
      isLoading = props.isLoading,
      hasFileSelected = props.hasFileSelected,
      columns = props.columns,
      data = props.data,
      onRemoveFile = props.onRemoveFile,
      fileName = props.fileName,
      fileType = props.fileType;

  var _useState = (0, _react.useState)(false),
      _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
      isDragOver = _useState2[0],
      setIsDragOver = _useState2[1];

  var handleChange = function handleChange(event) {
    onProcessFile(event.target.files[0]);
  };

  var handleDragLeave = function handleDragLeave() {
    setIsDragOver(false);
  };

  var handleDragOver = function handleDragOver(event) {
    preventDefault(event);
    setIsDragOver(true);
  };

  var handleDrop = function handleDrop(event) {
    preventDefault(event);
    setIsDragOver(false);
    var files = event.dataTransfer.files;

    if (files.length === 1 && files[0].type === 'text/csv') {
      onProcessFile(files[0]);
    }
  };

  if (hasFileSelected) {
    return /*#__PURE__*/_react["default"].createElement(_preview["default"], {
      fileName: fileName,
      fileType: fileType,
      columns: columns,
      data: data,
      isLoading: isLoading,
      onRemoveFile: onRemoveFile
    });
  }

  return /*#__PURE__*/_react["default"].createElement(_container["default"], {
    isDragOver: isDragOver,
    onDragEnter: preventDefault,
    onDragLeave: handleDragLeave,
    onDragOver: handleDragOver,
    onDrop: handleDrop,
    draggable: true
  }, /*#__PURE__*/_react["default"].createElement(_uploadFileButton["default"], {
    onChange: handleChange,
    isDragOver: isDragOver
  }), /*#__PURE__*/_react["default"].createElement(_RenderIf["default"], {
    isTrue: isDragOver
  }, /*#__PURE__*/_react["default"].createElement(_dropImg["default"], null), /*#__PURE__*/_react["default"].createElement(_dropTitle["default"], null, "Drop your file here"), /*#__PURE__*/_react["default"].createElement(_dropText["default"], null, "Drop your files for upload them instantly to the system")), /*#__PURE__*/_react["default"].createElement(_RenderIf["default"], {
    isTrue: !isDragOver
  }, /*#__PURE__*/_react["default"].createElement(_text["default"], null, "Find the file in your desktop.")));
}

StepTwo.propTypes = {
  onProcessFile: _propTypes["default"].func,
  isLoading: _propTypes["default"].bool,
  hasFileSelected: _propTypes["default"].bool,
  columns: _propTypes["default"].array,
  data: _propTypes["default"].array,
  onRemoveFile: _propTypes["default"].func,
  fileName: _propTypes["default"].string,
  fileType: _propTypes["default"].string
};
StepTwo.defaultProps = {
  onProcessFile: function onProcessFile() {},
  isLoading: false,
  hasFileSelected: false,
  columns: [],
  data: [],
  onRemoveFile: function onRemoveFile() {},
  fileName: '',
  fileType: ''
};