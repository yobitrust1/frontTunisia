"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = CarouselImage;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _utils = require("../../libs/utils");

var _context = require("../CarouselCard/context");

var _utils2 = require("../CarouselCard/utils");

var _li = _interopRequireDefault(require("./styled/li"));

var _innerContainer = _interopRequireDefault(require("./styled/innerContainer"));

var _imageContainer = _interopRequireDefault(require("./imageContainer"));

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var Item = /*#__PURE__*/function (_Component) {
  (0, _inherits2["default"])(Item, _Component);

  var _super = _createSuper(Item);

  function Item(props) {
    var _this;

    (0, _classCallCheck2["default"])(this, Item);
    _this = _super.call(this, props);
    _this.carouselImageID = (0, _utils.uniqueId)('carousel-content-id');
    _this.carouselIndicatorID = (0, _utils.uniqueId)('indicator-id');
    _this.itemRef = /*#__PURE__*/_react["default"].createRef();
    _this.state = {
      activeItem: undefined,
      prevActiveItem: undefined
    };
    return _this;
  }

  (0, _createClass2["default"])(Item, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;

      var _this$props = this.props,
          privateRegisterChild = _this$props.privateRegisterChild,
          header = _this$props.header;
      return setTimeout(function () {
        return privateRegisterChild({
          containerID: _this2.carouselImageID,
          indicatorID: _this2.carouselIndicatorID,
          ref: _this2.itemRef.current,
          header: header
        });
      }, 0);
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      var privateUnregisterChild = this.props.privateUnregisterChild;
      privateUnregisterChild(this.carouselIndicatorID);
    }
  }, {
    key: "getAnimationDirection",
    value: function getAnimationDirection() {
      var _this$props2 = this.props,
          childrenRegistred = _this$props2.childrenRegistred,
          isAnimationPaused = _this$props2.isAnimationPaused;
      var _this$state = this.state,
          activeItem = _this$state.activeItem,
          prevActiveItem = _this$state.prevActiveItem;

      if (isAnimationPaused) {
        var activeItemIndex = (0, _utils2.getItemIndex)(childrenRegistred, activeItem);
        var prevItemIndex = (0, _utils2.getItemIndex)(childrenRegistred, prevActiveItem);

        if (activeItemIndex === 0 && prevItemIndex === childrenRegistred.length - 1) {
          return 'right-to-left';
        }

        if (prevItemIndex === 0 && activeItemIndex === childrenRegistred.length - 1) {
          return 'left-to-right';
        }

        if (activeItemIndex > prevItemIndex) {
          return 'right-to-left';
        }

        return 'left-to-right';
      }

      return 'right-to-left';
    }
  }, {
    key: "getTabIndex",
    value: function getTabIndex() {
      var activeItem = this.props.activeItem;

      if (activeItem === this.carouselIndicatorID) {
        return 0;
      }

      return -1;
    }
  }, {
    key: "getAriaHidden",
    value: function getAriaHidden() {
      var activeItem = this.props.activeItem;
      return activeItem !== this.carouselIndicatorID;
    }
  }, {
    key: "getImageSrc",
    value: function getImageSrc() {
      var src = this.props.src;
      return {
        backgroundImage: "url(".concat(src, ")")
      };
    }
  }, {
    key: "getHtmlElememnt",
    value: function getHtmlElememnt() {
      var href = this.props.href;

      if (href && typeof href === 'string') {
        return 'a';
      }

      return 'div';
    }
  }, {
    key: "shouldShow",
    value: function shouldShow() {
      var _this$state2 = this.state,
          activeItem = _this$state2.activeItem,
          prevActiveItem = _this$state2.prevActiveItem;
      var areTheSame = activeItem === prevActiveItem;
      if (areTheSame) return false;
      return activeItem === this.carouselIndicatorID;
    }
  }, {
    key: "shouldHide",
    value: function shouldHide() {
      var _this$state3 = this.state,
          activeItem = _this$state3.activeItem,
          prevActiveItem = _this$state3.prevActiveItem;
      var isNotActive = activeItem !== this.carouselIndicatorID;
      var itWasActive = prevActiveItem === this.carouselIndicatorID;
      return isNotActive && itWasActive;
    }
  }, {
    key: "shouldBeActive",
    value: function shouldBeActive() {
      var _this$state4 = this.state,
          activeItem = _this$state4.activeItem,
          prevActiveItem = _this$state4.prevActiveItem;
      var areTheSame = activeItem === prevActiveItem;
      var isSelected = activeItem === this.carouselIndicatorID;
      return areTheSame && isSelected;
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props3 = this.props,
          assistiveText = _this$props3.assistiveText,
          description = _this$props3.description,
          header = _this$props3.header,
          href = _this$props3.href,
          style = _this$props3.style,
          className = _this$props3.className;
      var hasContent = !!(header || description);
      var tabIndex = href ? this.getTabIndex() : undefined;
      return /*#__PURE__*/_react["default"].createElement(_li["default"], {
        id: this.carouselImageID,
        className: className,
        role: "tabpanel",
        "aria-hidden": this.getAriaHidden(),
        "aria-labelledby": this.carouselIndicatorID,
        style: style,
        ref: this.itemRef,
        shouldBeActive: this.shouldBeActive(),
        shouldShow: this.shouldShow(),
        shouldHide: this.shouldHide(),
        direction: this.getAnimationDirection()
      }, /*#__PURE__*/_react["default"].createElement(_innerContainer["default"], {
        className: "rainbow-carousel-image",
        tabIndex: tabIndex,
        href: href,
        as: this.getHtmlElememnt(),
        "data-id": "carousel-image_inner-container"
      }, /*#__PURE__*/_react["default"].createElement(_imageContainer["default"], {
        imageSrc: this.getImageSrc(),
        assistiveText: assistiveText,
        hasContent: hasContent,
        header: header,
        description: description
      })));
    }
  }], [{
    key: "getDerivedStateFromProps",
    value: function getDerivedStateFromProps(props, state) {
      var activeItem = props.activeItem;
      var stateActiveItem = state.activeItem;
      var newState = {
        activeItem: activeItem,
        prevActiveItem: stateActiveItem
      };
      var isNotTheSameActive = state.activeItem !== newState.activeItem;
      var isNotTheSamePrev = state.prevActiveItem !== newState.prevActiveItem;
      var isNotTheSameState = isNotTheSameActive || isNotTheSamePrev;

      if (isNotTheSameState) {
        return newState;
      }

      return null;
    }
  }]);
  return Item;
}(_react.Component);

function CarouselImage(props) {
  // eslint-disable-next-line react/jsx-props-no-spreading
  return /*#__PURE__*/_react["default"].createElement(_context.Consumer, null, function (value) {
    return /*#__PURE__*/_react["default"].createElement(Item, (0, _extends2["default"])({}, props, value));
  });
}

CarouselImage.propTypes = {
  /** The URL for the image. */
  src: _propTypes["default"].string,

  /** The header can include text or another component,
   * and is displayed in the top of the content section. */
  header: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].node]),

  /** The description can include text or another component,
   * and is displayed below the header in the content section. */
  description: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].node]),

  /** A description for assistive sreen readers. */
  assistiveText: _propTypes["default"].string,

  /** The URL of the page that the card goes to. */
  href: _propTypes["default"].string,

  /** A CSS class for the outer element, in addition to the component's base classes. */
  className: _propTypes["default"].string,

  /** An object with custom style applied to the outer element. */
  style: _propTypes["default"].object
};
CarouselImage.defaultProps = {
  src: undefined,
  header: undefined,
  description: undefined,
  assistiveText: undefined,
  href: undefined,
  className: undefined,
  style: undefined
};