"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = Calendar;
Object.defineProperty(exports, "Component", {
  enumerable: true,
  get: function get() {
    return _singleCalendar["default"];
  }
});

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _hooks = require("../../libs/hooks");

var _singleCalendar = _interopRequireDefault(require("./singleCalendar"));

var _doubleCalendar = _interopRequireDefault(require("./doubleCalendar"));

var _helpers = require("./helpers");

var _hooks2 = require("./hooks");

/* eslint-disable react/jsx-props-no-spreading */

/**
 * Calendar provide a simple way to select a single date.
 */
function Calendar(props) {
  var locale = props.locale,
      selectionType = props.selectionType,
      variant = props.variant,
      value = props.value,
      onChange = props.onChange,
      rest = (0, _objectWithoutProperties2["default"])(props, ["locale", "selectionType", "variant", "value", "onChange"]);
  var currentLocale = (0, _hooks.useLocale)(locale);
  var currentValue = (0, _hooks2.useCurrentDateFromValue)(value);
  var range = (0, _hooks2.useRangeFromValue)(value, selectionType);
  var handleChange = (0, _react.useCallback)(function (newValue) {
    if (selectionType === 'single') return onChange(newValue);
    var result = (0, _helpers.buildNewRangeFromValue)(newValue, range);
    return onChange(result.range);
  }, [selectionType, onChange, range]);
  if (variant === 'double') return /*#__PURE__*/_react["default"].createElement(_doubleCalendar["default"], (0, _extends2["default"])({
    locale: currentLocale,
    value: currentValue,
    selectedRange: range,
    selectionType: selectionType,
    onChange: handleChange
  }, rest));
  return /*#__PURE__*/_react["default"].createElement(_singleCalendar["default"], (0, _extends2["default"])({
    locale: currentLocale,
    value: currentValue,
    selectedRange: range,
    selectionType: selectionType,
    onChange: handleChange
  }, rest));
}

Calendar.propTypes = {
  /** Sets the date for the Calendar programmatically. */
  value: _propTypes["default"].oneOfType([_propTypes["default"].instanceOf(Date), _propTypes["default"].string, _propTypes["default"].arrayOf(_propTypes["default"].oneOfType([_propTypes["default"].instanceOf(Date), _propTypes["default"].string]))]),

  /** The ending of a range of valid dates. The range includes the endDate.
   * The default value is current date + 100 years. */
  maxDate: _propTypes["default"].instanceOf(Date),

  /** The beginning of a range of valid dates. The range includes the startDate.
   * The default value is current date - 100 years. */
  minDate: _propTypes["default"].instanceOf(Date),

  /** The action triggered when a value attribute changes. */
  onChange: _propTypes["default"].func,

  /** A CSS class for the outer element, in addition to the component's base classes. */
  className: _propTypes["default"].string,

  /** An object with custom style applied to the outer element. */
  style: _propTypes["default"].object,

  /** The id of the outer element. */
  id: _propTypes["default"].string,

  /** The component locale. If the locale is not passed, it defaults to the context language, and if the context language is not passed, it will default to the browser's language. */
  locale: _propTypes["default"].string,

  /** The type of the selection. It can be a single date or a range. The default value is 'single'. */
  selectionType: _propTypes["default"].oneOf(['single', 'range']),

  /** The component variant. Defaults to 'single' */
  variant: _propTypes["default"].oneOf(['single', 'double'])
};
Calendar.defaultProps = {
  value: undefined,
  minDate: undefined,
  maxDate: undefined,
  onChange: function onChange() {},
  className: undefined,
  style: undefined,
  id: undefined,
  locale: undefined,
  selectionType: 'single',
  variant: 'single'
};