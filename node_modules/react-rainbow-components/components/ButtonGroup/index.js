"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = ButtonGroup;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _container = _interopRequireDefault(require("./styled/container"));

/**
 * Button groups are used to bunch together buttons with similar actions
 */
function ButtonGroup(props) {
  var className = props.className,
      style = props.style,
      children = props.children,
      variant = props.variant;
  return /*#__PURE__*/_react["default"].createElement(_container["default"], {
    className: className,
    style: style,
    role: "group",
    variant: variant
  }, children);
}

ButtonGroup.propTypes = {
  /** The content of the ButtonGroup.
   * Accepted childrens include Button, ButtonIcon and ButtonMenu. */
  children: _propTypes["default"].oneOfType([_propTypes["default"].arrayOf(_propTypes["default"].node), _propTypes["default"].object]),

  /** A CSS class for the outer element, in addition to the component's base classes. */
  className: _propTypes["default"].string,

  /** An object with custom style applied to the outer element. */
  style: _propTypes["default"].object,

  /** The variant changes the appearance of the ButtonGroup. Accepted variants include default,
   * and shaded. This value defaults to default. */
  variant: _propTypes["default"].oneOf(['default', 'shaded'])
};
ButtonGroup.defaultProps = {
  children: null,
  className: undefined,
  style: undefined,
  variant: 'default'
};