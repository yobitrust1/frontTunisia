"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _react = _interopRequireDefault(require("react"));

var _enzyme = require("enzyme");

var _ = _interopRequireDefault(require(".."));

var _label = _interopRequireDefault(require("../styled/label"));

describe('<Rating />', function () {
  it('should set the value of the star hovered to the state and set the value passed to the state when the mouse leave the component', function () {
    var component = (0, _enzyme.mount)( /*#__PURE__*/_react["default"].createElement(_["default"], {
      value: "2"
    }));
    component.find('input[value=3]').simulate('mouseover');
    expect(component.state().value).toBe('3');
    component.simulate('mouseleave');
    expect(component.state().value).toBe('2');
  });
  it('should not set the value of the star hovered to the state when readOnly is true', function () {
    var component = (0, _enzyme.mount)( /*#__PURE__*/_react["default"].createElement(_["default"], {
      value: "2",
      readOnly: true
    }));
    component.find('input[value=4]').simulate('mouseover');
    expect(component.state().value).toBe('2');
  });
  it('should render a label when label prop is passed', function () {
    var component = (0, _enzyme.mount)( /*#__PURE__*/_react["default"].createElement(_["default"], {
      label: "Rating Label"
    }));
    expect(component.find(_label["default"]).exists()).toBe(true);
  });
  it('should set "left" to labelAlignment prop passed in the Label component', function () {
    var component = (0, _enzyme.mount)( /*#__PURE__*/_react["default"].createElement(_["default"], {
      label: "Rating Label",
      labelAlignment: "left"
    }));
    expect(component.find(_label["default"]).prop('labelAlignment')).toBe('left');
  });
  it('should set "right" to labelAlignment prop passed in the Label component', function () {
    var component = (0, _enzyme.mount)( /*#__PURE__*/_react["default"].createElement(_["default"], {
      label: "Rating Label",
      labelAlignment: "right"
    }));
    expect(component.find(_label["default"]).prop('labelAlignment')).toBe('right');
  });
  it('should set "center" to labelAlignment if prop not passed in the Label component', function () {
    var component = (0, _enzyme.mount)( /*#__PURE__*/_react["default"].createElement(_["default"], {
      label: "Rating Label"
    }));
    expect(component.find(_label["default"]).prop('labelAlignment')).toBe('center');
  });
});