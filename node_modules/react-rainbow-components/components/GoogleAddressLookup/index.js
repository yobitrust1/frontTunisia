"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = GoogleAddressLookup;

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactAsyncScriptLoader = _interopRequireDefault(require("react-async-script-loader"));

var _component = _interopRequireDefault(require("./component"));

var CustomPropTypes = _interopRequireWildcard(require("./proptypes"));

var googleMapApiUrl = 'https://maps.googleapis.com/maps/api/js';
/**
 * The GoogleAddressLookup component is used to find a location.
 * @category Form
 */

function GoogleAddressLookup(props) {
  var apiKey = props.apiKey,
      rest = (0, _objectWithoutProperties2["default"])(props, ["apiKey"]); // eslint-disable-next-line react-hooks/exhaustive-deps

  var Component = (0, _react.useCallback)((0, _reactAsyncScriptLoader["default"])("".concat(googleMapApiUrl, "?key=").concat(apiKey, "&libraries=places"))(_component["default"]), [apiKey]); // eslint-disable-next-line react/jsx-props-no-spreading

  return /*#__PURE__*/_react["default"].createElement(Component, rest);
}

GoogleAddressLookup.propTypes = {
  /** The application's API key. To use the Google Maps JavaScript API,
   * you must get an API Key. See https://console.cloud.google.com/google/maps-apis/overview
   * to get an API Key. */
  apiKey: _propTypes["default"].string.isRequired,

  /** Text label for the component. */
  label: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].node]),

  /** Describes the position of the component label. Options include left, center and right.
   * This value defaults to center. */
  labelAlignment: _propTypes["default"].oneOf(['left', 'center', 'right']),

  /** A boolean to hide the component label. */
  hideLabel: _propTypes["default"].bool,

  /** Specifies the selected value of the component. */
  value: _propTypes["default"].oneOfType([CustomPropTypes.predictionShape, CustomPropTypes.placeDetailsShape, _propTypes["default"].string]),

  /** The name of the component. */
  name: _propTypes["default"].string,

  /** Text that is displayed when the field is empty, to prompt the user for a valid entry. */
  placeholder: _propTypes["default"].string,

  /** Specifies that the component must be filled out before submitting the form.
   * This value defaults to false. */
  required: _propTypes["default"].bool,

  /** Specifies that the component is read-only. This value defaults to false. */
  readOnly: _propTypes["default"].bool,

  /** Specifies that the component must be filled out before submitting the form. */
  error: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].node]),

  /** Specifies that the component element should be disabled. This value defaults to false. */
  disabled: _propTypes["default"].bool,

  /** Specifies the tab order of an element (when the tab button is used for navigating). */
  tabIndex: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string]),

  /** The id of the outer element. */
  id: _propTypes["default"].string,

  /** A CSS class for the outer element, in addition to the component's base classes. */
  className: _propTypes["default"].string,

  /** An object with custom style applied to the outer element. */
  style: _propTypes["default"].object,

  /**  The action triggered when click/select an option. */
  onChange: _propTypes["default"].func,

  /** The action triggered when the element is clicked. */
  onClick: _propTypes["default"].func,

  /** The action triggered when the element receives focus. */
  // onFocus: PropTypes.func,

  /** The action triggered when the element releases focus. */
  onBlur: _propTypes["default"].func,

  /**
   * An object with custom search options,
   * for example:
   *  searchOptions: {
   *      location: {
   *          latitude: -33.941264,
   *          longitude: 151.2042969,
   *      },
   *      country: 'us',
   *      radius: 150000,
   *      types: ['address'],
   *  }
   */
  searchOptions: CustomPropTypes.searchOptionsShape,

  /** The variant changes the appearance of the Input. Accepted variants include default,
   *shaded and bare. This value defaults to default. */
  variant: _propTypes["default"].oneOf(['default', 'shaded', 'bare'])
};
GoogleAddressLookup.defaultProps = {
  label: undefined,
  value: undefined,
  name: undefined,
  placeholder: null,
  required: false,
  error: null,
  disabled: false,
  readOnly: false,
  onChange: function onChange() {},
  onClick: function onClick() {},
  // onFocus: () => {},
  onBlur: function onBlur() {},
  tabIndex: undefined,
  className: undefined,
  style: undefined,
  id: undefined,
  labelAlignment: 'center',
  hideLabel: false,
  searchOptions: {},
  variant: 'default'
};