"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

/**
 * Modal page object class.
 * @class
 * @tutorial modal
 */
var PageModal = /*#__PURE__*/function () {
  /**
   * Create a new Modal page object.
   * @constructor
   * @param {string} rootElement - The selector of the Modal root element.
   */
  function PageModal(rootElement) {
    (0, _classCallCheck2["default"])(this, PageModal);
    this.rootElement = rootElement;
  }
  /**
   * Clicks the close button element.
   * @method
   */


  (0, _createClass2["default"])(PageModal, [{
    key: "clickCloseButton",
    value: function clickCloseButton() {
      var _this = this;

      browser.waitUntil(function () {
        return $(_this.rootElement).$('[id="modal-close-button"]').isDisplayed();
      });
      $(this.rootElement).$('[id="modal-close-button"]').click();
    }
    /**
     * Clicks the backdrop element.
     * @method
     */
    // clickOutside() {}

    /**
     * Returns true when the modal is open, false otherwise.
     * @method
     * @returns {bool}
     */

  }, {
    key: "isOpen",
    value: function isOpen() {
      if ($(this.rootElement).isDisplayed()) {
        return $(this.rootElement).$('section[role="dialog"]').isDisplayed() && $(this.rootElement).$('[id="modal-close-button"]').isDisplayed();
      }

      return false;
    }
    /**
     * Returns true when the closeButton has focus.
     * @method
     * @returns {bool}
     */

  }, {
    key: "hasFocusCloseButton",
    value: function hasFocusCloseButton() {
      return $(this.rootElement).$('[id="modal-close-button"]').isFocused();
    }
    /**
     * Wait until the open modal transition has finished.
     * @method
     */

  }, {
    key: "waitUntilOpen",
    value: function waitUntilOpen() {
      var _this2 = this;

      browser.waitUntil(function () {
        return _this2.isOpen();
      });
    }
    /**
     * Wait until the close modal transition has finished.
     * @method
     */

  }, {
    key: "waitUntilClose",
    value: function waitUntilClose() {
      var _this3 = this;

      browser.waitUntil(function () {
        return !_this3.isOpen();
      });
    }
  }]);
  return PageModal;
}();

module.exports = PageModal;