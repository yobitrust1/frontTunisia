"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactAsyncScriptLoader = _interopRequireDefault(require("react-async-script-loader"));

var _withReduxForm = _interopRequireDefault(require("../../libs/hocs/withReduxForm"));

var _getUrl = _interopRequireDefault(require("./getUrl"));

var _wrapper = _interopRequireDefault(require("./wrapper"));

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

/**
 * The ReCaptcha component is used to protects your website from spam and abuse.
 */
var ReCaptcha = /*#__PURE__*/function (_Component) {
  (0, _inherits2["default"])(ReCaptcha, _Component);

  var _super = _createSuper(ReCaptcha);

  function ReCaptcha(props) {
    var _this;

    (0, _classCallCheck2["default"])(this, ReCaptcha);
    _this = _super.call(this, props);
    var lang = props.lang;
    _this.ReCaptchaComponent = (0, _reactAsyncScriptLoader["default"])((0, _getUrl["default"])(lang))(_wrapper["default"]);
    return _this;
  }

  (0, _createClass2["default"])(ReCaptcha, [{
    key: "reset",
    value: function reset() {
      if (window.grecaptcha && this.optWidgetID) {
        window.grecaptcha.reset(this.optWidgetID);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var ReCaptchaComponent = this.ReCaptchaComponent;
      return /*#__PURE__*/_react["default"].createElement(ReCaptchaComponent // eslint-disable-next-line react/jsx-props-no-spreading
      , (0, _extends2["default"])({}, this.props, {
        onCreateRecaptcha: function onCreateRecaptcha(optWidgetID) {
          _this2.optWidgetID = optWidgetID;
        }
      }));
    }
  }]);
  return ReCaptcha;
}(_react.Component);

ReCaptcha.propTypes = {
  /** Specifies the site key for the recaptcha. */
  siteKey: _propTypes["default"].string.isRequired,

  /** Forces the widget to render in a specific language.
   * Auto-detects the user's language if unspecified. */
  lang: _propTypes["default"].string,

  /** The color theme of the widget. */
  theme: _propTypes["default"].oneOf(['light', 'dark']),

  /** The size of the widget. */
  size: _propTypes["default"].oneOf(['normal', 'compact']),

  /** The tabindex of the widget and challenge.
   * If other elements in your page use tabindex,
   * it should be set to make user navigation easier. */
  tabIndex: _propTypes["default"].oneOfType([_propTypes["default"].number, _propTypes["default"].string]),

  /** Specifies that the recaptcha must be completed before submitting the form. */
  error: _propTypes["default"].oneOfType([_propTypes["default"].node, _propTypes["default"].string]),

  /** The action triggered when the value of the recaptcha changes. It receive the
   * recaptcha token when is fired.
   */
  onChange: _propTypes["default"].func,

  /** A CSS class for the outer element, in addition to the component's base classes. */
  className: _propTypes["default"].string,

  /** An object with custom style applied for the outer element. */
  style: _propTypes["default"].object
};
ReCaptcha.defaultProps = {
  lang: undefined,
  theme: 'light',
  size: 'normal',
  tabIndex: 0,
  error: undefined,
  onChange: function onChange() {},
  className: undefined,
  style: undefined
};

var _default = (0, _withReduxForm["default"])(ReCaptcha);

exports["default"] = _default;