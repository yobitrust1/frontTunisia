"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var CHECKBOX_LABEL_SELECTOR = '.rainbow-table_cell-checkbox label';
var CHECKBOX_INPUT_SELECTOR = '.rainbow-table_cell-checkbox input';
/**
 * Row page object class.
 * @class
 */

var PageTableRow = /*#__PURE__*/function () {
  /**
   * Create a new Row page object.
   * @constructor
   * @param {string} rootElement - The selector of the Row root element.
   */
  function PageTableRow(rootElement) {
    (0, _classCallCheck2["default"])(this, PageTableRow);
    this.rootElement = rootElement;
  }
  /**
   * Clicks the row to select.
   * @method
   */


  (0, _createClass2["default"])(PageTableRow, [{
    key: "selectRow",
    value: function selectRow() {
      if (!this.isRowSelected()) {
        $(this.rootElement).$(CHECKBOX_LABEL_SELECTOR).click();
      }
    }
    /**
     * Clicks the row to select.
     * @method
     */

  }, {
    key: "deselectRow",
    value: function deselectRow() {
      if (this.isRowSelected()) {
        $(this.rootElement).$(CHECKBOX_LABEL_SELECTOR).click();
      }
    }
    /**
     * Returns true when the row is selected.
     * @method
     * @returns {bool}
     */

  }, {
    key: "isRowSelected",
    value: function isRowSelected() {
      return $(this.rootElement).$(CHECKBOX_INPUT_SELECTOR).isSelected();
    }
    /**
     * Returns true when the row input is disabled.
     * @method
     * @returns {bool}
     */

  }, {
    key: "isRowSelectionDisabled",
    value: function isRowSelectionDisabled() {
      return !$(this.rootElement).$(CHECKBOX_INPUT_SELECTOR).isEnabled();
    }
  }]);
  return PageTableRow;
}();

module.exports = PageTableRow;