"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

/**
 * Select page object class.
 * @class
 */
var PageSelect = /*#__PURE__*/function () {
  /**
   * Create a new Select page object.
   * @constructor
   * @param {string} rootElement - The selector of the Select root element.
   */
  function PageSelect(rootElement) {
    (0, _classCallCheck2["default"])(this, PageSelect);
    this.rootElement = rootElement;
  }
  /**
   * Clicks the select element.
   * @method
   */


  (0, _createClass2["default"])(PageSelect, [{
    key: "click",
    value: function click() {
      $(this.rootElement).$('select').click();
    }
    /**
     * Clicks the label element.
     * @method
     */

  }, {
    key: "clickLabel",
    value: function clickLabel() {
      $(this.rootElement).$('label').click();
    }
    /**
     * Returns true when the select element has focus.
     * @method
     * @returns {bool}
     */

  }, {
    key: "hasFocusSelect",
    value: function hasFocusSelect() {
      return $(this.rootElement).$('select').isFocused();
    }
    /**
     * Returns true when the select item with item position is selected.
     * @method
     * @returns {bool}
     * @param {number} itemPosition - The base 0 index of the select item.
     */

  }, {
    key: "isSelectedItem",
    value: function isSelectedItem(itemPosition) {
      var items = $(this.rootElement).$$('option');

      if (items[itemPosition]) {
        return items[itemPosition].isSelected();
      }

      return false;
    }
  }]);
  return PageSelect;
}();

module.exports = PageSelect;