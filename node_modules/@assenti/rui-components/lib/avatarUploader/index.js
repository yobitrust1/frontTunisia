import _regeneratorRuntime from "@babel/runtime/regenerator";
import _asyncToGenerator from "@babel/runtime/helpers/esm/asyncToGenerator";
import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
import React, { useRef, useState } from 'react';
import { Button, strinfigyClassObject, getBase64 } from '../index';
import { Account } from '../icon/icons';

var AvatarUploader = function AvatarUploader(props) {
  var inputFile = useRef();

  var _useState = useState(props.avatar),
      _useState2 = _slicedToArray(_useState, 2),
      avatar = _useState2[0],
      setAvatar = _useState2[1];

  var _useState3 = useState(Date.now()),
      _useState4 = _slicedToArray(_useState3, 2),
      inputKey = _useState4[0],
      setInputKey = _useState4[1];

  var className = {
    name: 'rui-avatar-uploader',
    lifted: props.lifted ? 'lifted' : '',
    dark: props.dark ? 'dark' : '',
    borderType: props.borderType ? props.borderType : '',
    className: props.className ? props.className : ''
  };

  var handlePreview = /*#__PURE__*/function () {
    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {
      var file, b;
      return _regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              file = e.target.files ? e.target.files[0] : null;
              _context.next = 3;
              return getBase64(file);

            case 3:
              b = _context.sent;
              setAvatar(b);
              props.onChange(b);

            case 6:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function handlePreview(_x) {
      return _ref.apply(this, arguments);
    };
  }();

  var handleDelete = function handleDelete(e) {
    e.preventDefault();
    props.onClear();
    setAvatar('');
    setInputKey(Date.now());
  };

  return /*#__PURE__*/React.createElement("div", {
    className: strinfigyClassObject(className),
    ref: props.avatarRef,
    style: {
      width: props.width ? props.width : 100,
      minWidth: props.width ? props.width : 100,
      height: props.height ? props.height : 120,
      backgroundImage: "url(".concat(avatar, ")")
    }
  }, !avatar ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("label", null, props.label ? props.label : props.label === null ? '' : 'upload avatar'), props.placeholderImage ? props.placeholderImage : /*#__PURE__*/React.createElement("i", {
    className: "rui-avatar-uploader-placeholder"
  }, /*#__PURE__*/React.createElement(Account, null))) : /*#__PURE__*/React.createElement(Button, {
    light: true,
    icon: "close",
    className: "ma-0",
    onClick: handleDelete
  }), /*#__PURE__*/React.createElement("input", {
    ref: inputFile,
    key: inputKey,
    accept: "image/*",
    title: props.title ? props.title : 'Choose file',
    onChange: handlePreview,
    type: "file"
  }));
};

export default AvatarUploader;