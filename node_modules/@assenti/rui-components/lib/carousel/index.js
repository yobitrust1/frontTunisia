import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
import React, { useState, useEffect } from 'react';
import { Icon } from '../index';

var Carousel = function Carousel(props) {
  var _useState = useState(0),
      _useState2 = _slicedToArray(_useState, 2),
      active = _useState2[0],
      setActive = _useState2[1];

  var _useState3 = useState(false),
      _useState4 = _slicedToArray(_useState3, 2),
      hover = _useState4[0],
      setHover = _useState4[1];

  var handlePrev = function handlePrev() {
    if (active === 0) setActive(props.items.length - 1);else if (active > 0) setActive(active - 1);
  };

  var handleNext = function handleNext() {
    if (active < props.items.length - 1) setActive(active + 1);else if (active === props.items.length - 1) setActive(0);
  };

  var Slide = function Slide(props) {
    return /*#__PURE__*/React.createElement("div", {
      className: "rui-carousel-slide",
      onClick: function onClick(e) {
        return props.onClick(e);
      },
      style: {
        backgroundImage: "url(".concat(props.img, ")")
      }
    }, props.title ? /*#__PURE__*/React.createElement("div", {
      className: "rui-carousel-slide-title"
    }, props.title) : '');
  };

  var handleClick = function handleClick(e, index, item) {
    e.preventDefault();
    if (props.onClick) props.onClick(index, item);
  };

  useEffect(function () {
    if (props.autoMotion && !hover) {
      setTimeout(function () {
        if (active < props.items.length - 1) {
          setActive(active + 1);
        } else {
          setActive(0);
        }
      }, props.interval ? props.interval : 3000);
    }
  }, [active, hover]);
  return /*#__PURE__*/React.createElement("div", {
    className: "rui-carousel ".concat(props.className ? props.className : '').trim(),
    style: {
      width: props.width ? props.width : '',
      maxWidth: props.width ? props.width : '',
      height: props.height ? props.height : 300
    },
    onMouseEnter: function onMouseEnter() {
      return setHover(true);
    },
    onMouseLeave: function onMouseLeave() {
      return setHover(false);
    }
  }, !props.hideArrows ? /*#__PURE__*/React.createElement(Icon, {
    onClick: handlePrev,
    size: 30,
    name: "chevron-back",
    className: "rui-carousel-slide-prev-btn"
  }) : null, /*#__PURE__*/React.createElement("div", {
    className: "rui-carousel-slider-wrapper",
    style: {
      transform: "translateX(-".concat(active * 100, "%)")
    }
  }, props.items.map(function (item, index) {
    return /*#__PURE__*/React.createElement(Slide, {
      key: index,
      img: item.img,
      title: item.title,
      onClick: function onClick(e) {
        return handleClick(e, index, item);
      }
    });
  })), /*#__PURE__*/React.createElement("ul", {
    className: "rui-carousel-dots"
  }, !props.hideDots ? props.items.map(function (item, index) {
    return /*#__PURE__*/React.createElement("li", {
      key: index,
      className: index === active ? 'active' : '',
      onClick: function onClick() {
        return setActive(index);
      }
    });
  }) : null), !props.hideArrows ? /*#__PURE__*/React.createElement(Icon, {
    onClick: handleNext,
    size: 30,
    name: "chevron-next",
    className: "rui-carousel-slide-next-btn"
  }) : null);
};

export default Carousel;