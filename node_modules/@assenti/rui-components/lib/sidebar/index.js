import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
import React, { useState } from 'react';
import { strinfigyClassObject } from '../utils';
import { Tooltip, Button, Icon } from '../index';

var Sidebar = function Sidebar(props) {
  var className = {
    name: 'rui-sidebar',
    lifted: props.lifted ? 'lifted' : '',
    min: props.min ? 'min' : '',
    dark: props.dark ? 'dark' : ''
  };

  var _useState = useState(props.default ? true : false),
      _useState2 = _slicedToArray(_useState, 2),
      min = _useState2[0],
      setMin = _useState2[1];

  var width = props.width ? props.width : 280;
  var minWidth = props.minWidth ? props.minWidth : 50;

  var getWidth = function getWidth() {
    return min ? minWidth : width;
  };

  return /*#__PURE__*/React.createElement("div", {
    className: strinfigyClassObject(className),
    style: {
      width: getWidth(),
      minWidth: getWidth(),
      height: props.height ? props.height : '',
      maxHeight: props.height ? props.height : ''
    }
  }, /*#__PURE__*/React.createElement("div", {
    className: "rui-sidebar-content"
  }, props.children), props.collapsable && /*#__PURE__*/React.createElement("div", {
    className: "rui-sidebar-footer"
  }, /*#__PURE__*/React.createElement(Tooltip, {
    tooltip: min ? props.expandText ? props.expandText : 'Expand' : props.collapseText ? props.collapseText : 'Collapse'
  }, /*#__PURE__*/React.createElement(Button, {
    dark: props.dark,
    light: props.dark ? false : true,
    icon: /*#__PURE__*/React.createElement(Icon, {
      name: min ? props.rightSide ? 'chevron-double-left' : 'chevron-double-right' : props.rightSide ? 'chevron-double-right' : 'chevron-double-left'
    }),
    onClick: function onClick() {
      if (props.onToggle) props.onToggle(!min);
      setMin(!min);
    }
  }))));
};

export default Sidebar;