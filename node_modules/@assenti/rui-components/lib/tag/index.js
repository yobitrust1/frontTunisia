import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
import React, { useState, useEffect } from 'react';
import { strinfigyClassObject } from '../utils';

var Tag = function Tag(props) {
  var _useState = useState(props.visible ? props.visible : true),
      _useState2 = _slicedToArray(_useState, 2),
      visible = _useState2[0],
      setVisible = _useState2[1];

  var className = {
    name: 'rui-tag',
    lifted: props.lifted ? 'lifted' : '',
    uppercase: props.uppercase ? 'uppercase' : '',
    closable: props.closable ? 'closable' : '',
    borderType: props.borderType ? props.borderType === 'default' ? '' : props.borderType : '',
    color: props.color ? props.color : 'primary',
    small: props.small && !props.tiny ? 'small' : '',
    tiny: props.tiny ? 'tiny' : '',
    outlined: props.outlined ? 'outlined' : '',
    className: props.className ? props.className : ''
  };

  var handleClose = function handleClose() {
    if (props.onClose && !props.disabled) {
      props.onClose();
      if (!props.onClick) setVisible(false);
    }
  };

  useEffect(function () {
    if (props.closable) setVisible(props.visible);
  }, [props.visible]);
  return /*#__PURE__*/React.createElement(React.Fragment, null, visible && /*#__PURE__*/React.createElement("div", {
    className: strinfigyClassObject(className),
    style: props.style,
    ref: props.tagRef,
    onClick: props.onClick && !props.disabled ? props.onClick : null
  }, props.children, props.closable && /*#__PURE__*/React.createElement("i", {
    className: "rui-tag-close",
    onClick: handleClose
  }, "\xD7")));
};

export default Tag;