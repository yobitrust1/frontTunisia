import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
import React, { useState, useEffect, useRef } from 'react';
import { CSSTransition } from 'react-transition-group';
import { strinfigyClassObject } from '../utils';

var Dropdown = function Dropdown(props) {
  var container = useRef();

  var _useState = useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      visible = _useState2[0],
      setVisible = _useState2[1];

  var className = {
    name: 'rui-dropdown-container',
    dark: props.dark ? 'dark' : '',
    position: props.position ? props.position : '',
    className: props.className ? props.className : ''
  };

  var handleClick = function handleClick(e) {
    if (container.current.contains(e.target)) return;
    setVisible(false);
  };

  useEffect(function () {
    document.addEventListener('mousedown', handleClick, true);
    return function () {
      document.removeEventListener("mousedown", handleClick, true);
    };
  }, []);
  return /*#__PURE__*/React.createElement("div", {
    className: strinfigyClassObject(className),
    ref: container
  }, /*#__PURE__*/React.createElement("div", {
    onClick: function onClick() {
      return setVisible(true);
    }
  }, props.trigger), /*#__PURE__*/React.createElement(CSSTransition, {
    in: props.closeManaged ? props.visible : visible,
    timeout: 300,
    classNames: "rui-dropdown",
    unmountOnExit: true
  }, /*#__PURE__*/React.createElement("div", {
    className: "rui-dropdown",
    style: {
      width: props.width ? props.width : '',
      minWidth: props.minWidth ? props.minWidth : '',
      right: props.rightOffset ? props.rightOffset : '',
      left: props.legtOffset ? props.legtOffset : ''
    }
  }, /*#__PURE__*/React.createElement("div", {
    className: "rui-dropdown__content",
    style: {
      maxHeight: props.contentMaxHeight
    },
    onClick: function onClick() {
      return props.closeManaged ? {} : setVisible(false);
    }
  }, props.children))));
};

export default Dropdown;