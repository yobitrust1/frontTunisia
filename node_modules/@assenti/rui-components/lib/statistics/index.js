import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
import React, { useEffect, useState } from 'react';
import { toFinancial } from '../index';
import { strinfigyClassObject } from '../utils';

var Statistics = function Statistics(props) {
  var _useState = useState(0),
      _useState2 = _slicedToArray(_useState, 2),
      value = _useState2[0],
      setValue = _useState2[1];

  var interval = props.interval ? props.interval : 30;
  var step = props.step ? props.step : 10;
  var className = {
    name: 'rui-statistics',
    dark: props.dark ? 'dark' : '',
    align: props.align ? props.align : '',
    className: props.className ? props.className : ''
  };

  var getValue = function getValue(v) {
    if (props.fractions) {
      var number = v.toFixed(props.fractions);

      var _number$split = number.split('.'),
          _number$split2 = _slicedToArray(_number$split, 2),
          integer = _number$split2[0],
          fraction = _number$split2[1];

      if (props.financial) {
        return /*#__PURE__*/React.createElement(React.Fragment, null, toFinancial(integer), /*#__PURE__*/React.createElement("small", null, ".", fraction));
      } else return /*#__PURE__*/React.createElement(React.Fragment, null, integer, /*#__PURE__*/React.createElement("small", null, ".", fraction));
    } else {
      if (props.financial) {
        return toFinancial(v);
      } else return v;
    }
  };

  useEffect(function () {
    if (props.autoFill) {
      setTimeout(function () {
        if (value < props.value) {
          if (step > props.value) {
            setValue(props.value);
          } else setValue(value + step);
        } else if (value === props.value) {
          if (props.onDone) props.onDone();
        }
      }, interval);
    } else {
      setValue(props.value);
    }
  }, [value]);
  return /*#__PURE__*/React.createElement("div", {
    className: strinfigyClassObject(className),
    style: props.style
  }, !!props.title && /*#__PURE__*/React.createElement("div", {
    className: "rui-statistics-title"
  }, props.title), /*#__PURE__*/React.createElement("div", {
    className: "rui-statistics-value-group"
  }, props.prefix, /*#__PURE__*/React.createElement("div", {
    className: props.prefix || props.suffix ? 'rui-statistics-value padding' : 'rui-statistics-value',
    style: {
      fontSize: props.valueSize ? props.valueSize : '',
      color: props.valueColor ? props.valueColor : ''
    }
  }, getValue(value)), props.suffix));
};

export default Statistics;