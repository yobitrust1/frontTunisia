import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
import React, { useState, useRef, useEffect } from 'react';
import { Icon, Tooltip } from '../index';
import { strinfigyClassObject } from '../utils';
import { measureSubmenu } from './utils';

var Collapse = function Collapse(props) {
  var _useState = useState(props.defaultState ? props.defaultState : false),
      _useState2 = _slicedToArray(_useState, 2),
      visible = _useState2[0],
      setVisible = _useState2[1];

  var _useState3 = useState(''),
      _useState4 = _slicedToArray(_useState3, 2),
      height = _useState4[0],
      setHeight = _useState4[1];

  var contentHeight = useRef();

  var getState = function getState() {
    if (props.controled) return props.visible;else return visible;
  };

  var className = {
    name: 'rui-collapse',
    hover: props.hover ? 'hover' : '',
    border: props.border ? 'bordered' : '',
    title: props.title ? 'titled' : '',
    dark: props.dark ? 'dark' : '',
    position: !props.title ? props.position ? props.position : 'right' : '',
    className: props.className ? props.className : ''
  };

  var handleToggle = function handleToggle() {
    if (props.onChange) props.onChange(!visible);
    setVisible(!visible);
  };

  useEffect(function () {
    setHeight(measureSubmenu(contentHeight.current).height);
  }, []);
  return /*#__PURE__*/React.createElement("div", {
    className: strinfigyClassObject(className)
  }, /*#__PURE__*/React.createElement("div", {
    className: "rui-collapse-trigger",
    onClick: function onClick() {
      return props.hover ? handleToggle() : {};
    }
  }, props.title ? /*#__PURE__*/React.createElement("span", null, props.title) : '', /*#__PURE__*/React.createElement("div", {
    className: "row align-center"
  }, props.extra, !props.customToggler ? props.tooltip ? /*#__PURE__*/React.createElement(Tooltip, {
    tooltip: props.tooltip
  }, /*#__PURE__*/React.createElement(Icon, {
    name: props.icon ? props.icon : 'chevron-down',
    size: props.iconSize ? props.iconSize : '',
    color: props.iconColor ? props.iconColor : props.dark ? '#fff' : '',
    className: getState() ? 'reverse' : '',
    onClick: handleToggle
  })) : /*#__PURE__*/React.createElement(Icon, {
    name: props.icon ? props.icon : 'chevron-down',
    size: props.iconSize ? props.iconSize : '',
    color: props.iconColor ? props.iconColor : props.dark ? '#fff' : '',
    className: getState() ? 'reverse' : '',
    onClick: handleToggle
  }) : /*#__PURE__*/React.createElement("span", {
    onClick: handleToggle
  }, props.customToggler))), /*#__PURE__*/React.createElement("div", {
    ref: contentHeight,
    style: {
      height: getState() ? height : 0
    },
    className: getState() ? 'rui-collapse__content active' : 'rui-collapse__content'
  }, props.children));
};

export default Collapse;